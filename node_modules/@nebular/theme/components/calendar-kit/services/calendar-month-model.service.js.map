{"version":3,"file":"calendar-month-model.service.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/calendar-kit/services/calendar-month-model.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NbDateTimeUtil } from './date-time-util';\nimport { NbLocaleService } from './locale.service';\nimport { batch } from '../helpers';\n\n\n@Injectable()\nexport class NbCalendarMonthModelService {\n\n  constructor(protected locale: NbLocaleService) {\n  }\n\n  createDaysGrid(activeMonth: Date, boundingMonth: boolean = true): Date[][] {\n    const weeks = this.createDates(activeMonth);\n    return this.withBoundingMonths(weeks, activeMonth, boundingMonth);\n  }\n\n  private createDates(activeMonth: Date): Date[][] {\n    const days = NbDateTimeUtil.createDateRangeForMonth(activeMonth);\n    const startOfWeekDayDiff = this.getStartOfWeekDayDiff(activeMonth);\n    return batch(days, NbDateTimeUtil.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withBoundingMonths(weeks: Date[][], activeMonth: Date, boundingMonth: boolean): Date[][] {\n    let withBoundingMonths = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth, boundingMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth, boundingMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: Date[][], activeMonth: Date, boundingMonth: boolean): Date[][] {\n    const firstWeek = weeks.shift();\n    const requiredItems: number = NbDateTimeUtil.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, boundingMonth, requiredItems));\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: Date[][], activeMonth: Date, boundingMonth: boolean): Date[][] {\n    const lastWeek = weeks.pop();\n    const requiredItems: number = NbDateTimeUtil.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, boundingMonth, requiredItems));\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: Date, boundingMonth: boolean, requiredItems: number): Date[] {\n    const month = NbDateTimeUtil.addMonth(activeMonth, -1);\n    const daysInMonth = NbDateTimeUtil.getNumberOfDaysInMonth(month);\n    return NbDateTimeUtil.createDateRangeForMonth(month)\n      .slice(daysInMonth - requiredItems)\n      .map(date => boundingMonth ? date : null);\n  }\n\n  private createNextBoundingDays(activeMonth: Date, boundingMonth: boolean, requiredItems: number): Date[] {\n    const month = NbDateTimeUtil.addMonth(activeMonth, 1);\n    return NbDateTimeUtil.createDateRangeForMonth(month)\n      .slice(0, requiredItems)\n      .map(date => boundingMonth ? date : null);\n  }\n\n  private getStartOfWeekDayDiff(date: Date): number {\n    const startOfMonth = NbDateTimeUtil.getMonthStart(date);\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: Date): number {\n    return (7 - this.locale.getFirstDayOfWeek() + date.getDay()) % 7;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: Date[][]): boolean {\n    return weeks[0].length < NbDateTimeUtil.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: Date[][]): boolean {\n    return weeks[weeks.length - 1].length < NbDateTimeUtil.DAYS_IN_WEEK;\n  }\n}\n"]}