{"version":3,"file":"date-time-util.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/calendar-kit/services/date-time-util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { range } from '../helpers';\n\nexport namespace NbDateTimeUtil {\n  export const DAYS_IN_WEEK: number = 7;\n\n  export const markIfHoliday = (name, i) => ({ name, isHoliday: i % 6 === 0 });\n\n  export const createDate = (year: number, month: number, date: number) => {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n    return result;\n  };\n\n  export const isSameYear = (date1: Date, date2: Date): boolean => {\n    return date1.getFullYear() === date2.getFullYear();\n  };\n\n  export const isSameYearSafe = (date1: Date, date2: Date): boolean => {\n    return date1 && date2 && isSameYear(date1, date2);\n  };\n\n  export const isSameMonth = (date1: Date, date2: Date): boolean => {\n    return isSameYear(date1, date2) &&\n      date1.getMonth() === date2.getMonth();\n  };\n\n  export const isSameMonthSafe = (date1: Date, date2: Date): boolean => {\n    return date1 && date2 && isSameMonth(date1, date2);\n  };\n\n  export const isSameDay = (date1: Date, date2: Date): boolean => {\n    return isSameMonth(date1, date2) &&\n      date1.getDate() === date2.getDate();\n  };\n\n  export const isSameDaySafe = (date1: Date, date2: Date): boolean => {\n    return date1 && date2 && isSameDay(date1, date2);\n  };\n\n  export const compareDates = (date1: Date, date2: Date): number => {\n    return date1.getTime() - date2.getTime();\n  };\n\n  export const isBetween = (date: Date, start: Date, end: Date): boolean => {\n    return compareDates(date, start) > 0 && compareDates(date, end) < 0;\n  };\n\n  export const clone = (date: Date): Date => {\n    return new Date(date.getTime());\n  };\n\n  export const getMonthStart = (date: Date): Date => {\n    return createDate(date.getFullYear(), date.getMonth(), 1);\n  };\n\n  export const getMonthEnd = (date: Date): Date => {\n    return createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  };\n\n  export const getYearStart = (date: Date): Date => {\n    return createDate(date.getFullYear(), 0, 1);\n  };\n\n  export const getYearEnd = (date: Date): Date => {\n    return createDate(date.getFullYear(), 11, 31);\n  };\n\n  export const getNumberOfDaysInMonth = (date: Date): number => {\n    return getMonthEnd(date).getDate();\n  };\n\n  export const addDay = (date: Date, num: number) => {\n    return createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  };\n\n  export const addMonth = (date: Date, num: number) => {\n    return createDate(date.getFullYear(), date.getMonth() + num, date.getDate());\n  };\n\n  export const addYear = (date: Date, num: number) => {\n    return createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  };\n\n  export const createDateRangeForMonth = (date: Date): Date[] => {\n    const daysInMonth: number = getNumberOfDaysInMonth(date);\n    return range(daysInMonth, i => {\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      return NbDateTimeUtil.createDate(year, month, i + 1)\n    });\n  }\n}\n"]}