{"version":3,"file":"calendar-year-cell.component.js","sourceRoot":"","sources":["../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,KAAK,EACL,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;;;sBAmBP,IAAI,YAAY,EAAE;;0BAEtB,iDAAQ;;YACzC,MAAM,CAAC,IAAI,CAAC,aAAa,IAAI,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;;;;;0BAGxD,8CAAK;;YACnC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;;;;;0BAGpC,iDAAQ;;YACzC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;;;;;IAGxD,sBAAI,6CAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;SAChC;;;OAAA;IAGD,6CAAO;QACL,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC;SACR;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IAGtB,oDAAc,GAAtB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3F;IAEO,oDAAc,GAAtB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC7F;IAEO,+CAAS,GAAjB;QACE,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/C;IAEO,6CAAO,GAAf;QACE,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7C;;gBAxDF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,YAAY;oBACtB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,IAAI,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;iBAC/B;;;;yBAEE,KAAK;wBAEL,KAAK;wBAEL,KAAK;kCAEL,KAAK;2BAEL,MAAM;6BAEN,WAAW,SAAC,gBAAgB;0BAI5B,WAAW,SAAC,aAAa;6BAIzB,WAAW,SAAC,gBAAgB;4BAQ5B,YAAY,SAAC,OAAO;;sCApDvB;;SAyBa,2BAA2B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { NbDateTimeUtil } from '../../services';\nimport { NbCalendarCell } from '../../model';\n\n\n@Component({\n  selector: 'nb-calendar-year-cell',\n  template: `{{ year }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { 'class': 'year-cell' },\n})\nexport class NbCalendarYearCellComponent implements NbCalendarCell<Date> {\n  @Input() date: Date;\n\n  @Input() min: Date;\n\n  @Input() max: Date;\n\n  @Input() selectedValue: Date;\n\n  @Output() select: EventEmitter<Date> = new EventEmitter();\n\n  @HostBinding('class.selected') get selected(): boolean {\n    return this.selectedValue && NbDateTimeUtil.isSameYear(this.date, this.selectedValue);\n  }\n\n  @HostBinding('class.today') get today(): boolean {\n    return this.date && NbDateTimeUtil.isSameYear(this.date, new Date());\n  }\n\n  @HostBinding('class.disabled') get disabled(): boolean {\n    return this.smallerThanMin() || this.greaterThanMax();\n  }\n\n  get year(): number {\n    return this.date.getFullYear();\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.select.emit(this.date);\n  }\n\n  private smallerThanMin(): boolean {\n    return this.date && this.min && NbDateTimeUtil.compareDates(this.yearEnd(), this.min) < 0;\n  }\n\n  private greaterThanMax(): boolean {\n    return this.date && this.max && NbDateTimeUtil.compareDates(this.yearStart(), this.max) > 0;\n  }\n\n  private yearStart(): Date {\n    return NbDateTimeUtil.getYearStart(this.date);\n  }\n\n  private yearEnd(): Date {\n    return NbDateTimeUtil.getYearEnd(this.date);\n  }\n}\n"]}