/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, HostListener, Input, Output, } from '@angular/core';
import { NbDateTimeUtil } from '../../services';
var NbCalendarYearCellComponent = /** @class */ (function () {
    function NbCalendarYearCellComponent() {
        this.select = new EventEmitter();
    }
    Object.defineProperty(NbCalendarYearCellComponent.prototype, "selected", {
        get: function () {
            return this.selectedValue && NbDateTimeUtil.isSameYear(this.date, this.selectedValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NbCalendarYearCellComponent.prototype, "today", {
        get: function () {
            return this.date && NbDateTimeUtil.isSameYear(this.date, new Date());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NbCalendarYearCellComponent.prototype, "disabled", {
        get: function () {
            return this.smallerThanMin() || this.greaterThanMax();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NbCalendarYearCellComponent.prototype, "year", {
        get: function () {
            return this.date.getFullYear();
        },
        enumerable: true,
        configurable: true
    });
    NbCalendarYearCellComponent.prototype.onClick = function () {
        if (this.disabled) {
            return;
        }
        this.select.emit(this.date);
    };
    NbCalendarYearCellComponent.prototype.smallerThanMin = function () {
        return this.date && this.min && NbDateTimeUtil.compareDates(this.yearEnd(), this.min) < 0;
    };
    NbCalendarYearCellComponent.prototype.greaterThanMax = function () {
        return this.date && this.max && NbDateTimeUtil.compareDates(this.yearStart(), this.max) > 0;
    };
    NbCalendarYearCellComponent.prototype.yearStart = function () {
        return NbDateTimeUtil.getYearStart(this.date);
    };
    NbCalendarYearCellComponent.prototype.yearEnd = function () {
        return NbDateTimeUtil.getYearEnd(this.date);
    };
    NbCalendarYearCellComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nb-calendar-year-cell',
                    template: "{{ year }}",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: { 'class': 'year-cell' },
                },] },
    ];
    /** @nocollapse */
    NbCalendarYearCellComponent.propDecorators = {
        "date": [{ type: Input },],
        "min": [{ type: Input },],
        "max": [{ type: Input },],
        "selectedValue": [{ type: Input },],
        "select": [{ type: Output },],
        "selected": [{ type: HostBinding, args: ['class.selected',] },],
        "today": [{ type: HostBinding, args: ['class.today',] },],
        "disabled": [{ type: HostBinding, args: ['class.disabled',] },],
        "onClick": [{ type: HostListener, args: ['click',] },],
    };
    return NbCalendarYearCellComponent;
}());
export { NbCalendarYearCellComponent };
//# sourceMappingURL=calendar-year-cell.component.js.map