{"version":3,"file":"calendar-days-names.component.js","sourceRoot":"","sources":["../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAE3E,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;;IAe/D,sCAAoB,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;KAC1C;IAED,+CAAQ,GAAR;QACE,IAAM,IAAI,GAAoB,IAAI,CAAC,eAAe,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;KACzC;IAEO,sDAAe,GAAvB;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;aACnC,GAAG,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;KACtC;IAEO,uDAAgB,GAAxB,UAAyB,IAAqB;QAC5C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YACzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SACzB;QAED,MAAM,CAAC,IAAI,CAAC;KACb;;gBA/BF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,SAAS,EAAE,CAAC,qCAAqC,CAAC;oBAClD,QAAQ,EAAE,gHAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;gBAVwB,eAAe;;uCARxC;;SAmBa,4BAA4B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NbCalendarDay } from '../../model';\nimport { NbDateTimeUtil, NbLocaleService } from '../../services';\n\n\n@Component({\n  selector: 'nb-calendar-days-names',\n  styleUrls: ['./calendar-days-names.component.css'],\n  template: `\n    <div class=\"day\" *ngFor=\"let day of days\" [class.holiday]=\"day.isHoliday\">{{ day.name }}</div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbCalendarDaysNamesComponent implements OnInit {\n\n  days: NbCalendarDay[];\n\n  constructor(private locale: NbLocaleService) {\n  }\n\n  ngOnInit() {\n    const days: NbCalendarDay[] = this.createDaysNames();\n    this.days = this.shiftStartOfWeek(days);\n  }\n\n  private createDaysNames(): NbCalendarDay[] {\n    return this.locale.getDayOfWeekNames()\n      .map(NbDateTimeUtil.markIfHoliday);\n  }\n\n  private shiftStartOfWeek(days: NbCalendarDay[]): NbCalendarDay[] {\n    for (let i = 0; i < this.locale.getFirstDayOfWeek(); i++) {\n      days.push(days.shift());\n    }\n\n    return days;\n  }\n}\n"]}