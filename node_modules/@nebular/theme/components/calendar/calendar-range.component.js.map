{"version":3,"file":"calendar-range.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/calendar/calendar-range.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAE7E,OAAO,EAAkB,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACrG,OAAO,EAAE,+BAA+B,EAAE,gCAAgC,EAAE,MAAM,wBAAwB,CAAC;;;;;;;;;;;;;;;6BAuCvE,IAAI;;;;yBAKG,kBAAkB,CAAC,IAAI;gCA0BN,+BAA+B;iCAgB9B,gCAAgC;;;;;oBAM3D,cAAc,CAAC,MAAM;;;;2BAUE,IAAI,YAAY,EAAE;;0BArCrE,oDAAc;;;;kBAAC,aAAoD;YACrE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;aACvC;;;;;0BAaC,wDAAkB;;;;kBAAC,aAAoD;YACzE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;aACxC;;;;;IAoBH,2CAAQ,GAAR,UAAS,IAAU;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KAC3B;IAEO,iDAAc,GAAtB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;SACzC;KACF;IAEO,iDAAc,GAAtB,UAAuB,IAAU;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtB;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;KACF;IAEO,mDAAgB,GAAxB;QACE,qBAAQ,gBAAK,EAAE,YAAG,CAAgB;QAClC,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC;KACtB;IAEO,8CAAW,GAAnB,UAAoB,KAAW;QAC7B,IAAI,CAAC,WAAW,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;KAC7B;IAEO,4CAAS,GAAjB,UAAkB,IAAU;QAClB,IAAA,wBAAK,CAAgB;QAE7B,EAAE,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,EAAE,KAAK,OAAA,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;SACxC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;SAC/C;KACF;IAEO,8CAAW,GAAnB,UAAoB,KAAsB;QACxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;;gBAjIF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,ibAcT;iBACF;;;;kCAME,KAAK;8BAKL,KAAK;wBAKL,KAAK;wBAKL,KAAK;2BAKL,KAAK;mCAKL,KAAK,SAAC,kBAAkB;uCAWxB,KAAK;uCAKL,KAAK,SAAC,mBAAmB;yBAYzB,KAAK;0BAKL,KAAK;gCAKL,MAAM;;mCA/GT;;SA2Ca,wBAAwB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\n\nimport { NbCalendarCell, NbCalendarSize, NbCalendarViewMode, NbDateTimeUtil } from '../calendar-kit';\nimport { NbCalendarRangeDayCellComponent, NbCalendarRangeYearCellComponent } from './calendar-range-cells';\n\n\nexport interface NbCalendarRange {\n  start: Date;\n  end?: Date;\n}\n\n/**\n * Calendar component provides a capability to choose ranges.\n * For additional info check `NbBaseCalendarComponent`.\n *\n * ```html\n * <nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n * ```\n */\n@Component({\n  selector: 'nb-calendar-range',\n  template: `\n    <nb-base-calendar\n      [date]=\"range\"\n      (dateChange)=\"onChange($event)\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [startView]=\"startView\"\n      [boundingMonth]=\"boundingMonth\"\n      [dayCellComponent]=\"dayCellComponent\"\n      [monthCellComponent]=\"monthCellComponent\"\n      [yearCellComponent]=\"yearCellComponent\"\n      [size]=\"size\"\n    ></nb-base-calendar>\n  `,\n})\nexport class NbCalendarRangeComponent {\n  /**\n   * Defines if we should render previous and next months\n   * in the current month view.\n   * */\n  @Input() boundingMonth: boolean = true;\n\n  /**\n   * Defines starting view for the calendar.\n   * */\n  @Input() startView: NbCalendarViewMode = NbCalendarViewMode.DATE;\n\n  /**\n   * A minimum available date for selection.\n   * */\n  @Input() min: Date;\n\n  /**\n   * A maximum available date for selection.\n   * */\n  @Input() max: Date;\n\n  /**\n   * A predicate that decides which cells will be disabled.\n   * */\n  @Input() filter: (Date) => boolean;\n\n  /**\n   * Custom day cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input('dayCellComponent')\n  set _cellComponent(cellComponent: Type<NbCalendarCell<NbCalendarRange>>) {\n    if (cellComponent) {\n      this.dayCellComponent = cellComponent;\n    }\n  }\n  dayCellComponent: Type<NbCalendarCell<NbCalendarRange>> = NbCalendarRangeDayCellComponent;\n\n  /**\n   * Custom month cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() monthCellComponent: Type<NbCalendarCell<NbCalendarRange>>;\n\n  /**\n   * Custom year cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input('yearCellComponent')\n  set _yearCellComponent(cellComponent: Type<NbCalendarCell<NbCalendarRange>>) {\n    if (cellComponent) {\n      this.yearCellComponent = cellComponent;\n    }\n  }\n  yearCellComponent: Type<NbCalendarCell<NbCalendarRange>> = NbCalendarRangeYearCellComponent;\n\n  /**\n   * Size of the calendar and entire components.\n   * Can be 'medium' which is default or 'large'.\n   * */\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n\n  /**\n   * Range which will be rendered as selected.\n   * */\n  @Input() range: NbCalendarRange;\n\n  /**\n   * Emits range when start selected and emits again when end selected.\n   * */\n  @Output() rangeChange: EventEmitter<NbCalendarRange> = new EventEmitter();\n\n  onChange(date: Date) {\n    this.initDateIfNull();\n    this.handleSelected(date);\n  }\n\n  private initDateIfNull() {\n    if (!this.range) {\n      this.range = { start: null, end: null };\n    }\n  }\n\n  private handleSelected(date: Date) {\n    if (this.selectionStarted()) {\n      this.selectEnd(date);\n    } else {\n      this.selectStart(date);\n    }\n  }\n\n  private selectionStarted(): boolean {\n    const { start, end } = this.range;\n    return start && !end;\n  }\n\n  private selectStart(start: Date) {\n    this.selectRange({ start });\n  }\n\n  private selectEnd(date: Date) {\n    const { start } = this.range;\n\n    if (NbDateTimeUtil.compareDates(date, start) > 0) {\n      this.selectRange({ start, end: date });\n    } else {\n      this.selectRange({ start: date, end: start });\n    }\n  }\n\n  private selectRange(range: NbCalendarRange) {\n    this.range = range;\n    this.rangeChange.emit(range);\n  }\n}\n"]}