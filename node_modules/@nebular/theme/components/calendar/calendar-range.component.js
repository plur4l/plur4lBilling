/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Component, EventEmitter, Input, Output, Type } from '@angular/core';
import { NbCalendarSize, NbCalendarViewMode, NbDateTimeUtil } from '../calendar-kit';
import { NbCalendarRangeDayCellComponent, NbCalendarRangeYearCellComponent } from './calendar-range-cells';
/**
 * Calendar component provides a capability to choose ranges.
 * For additional info check `NbBaseCalendarComponent`.
 *
 * ```html
 * <nb-calendar-range [(range)]="range"></nb-calendar-range>
 * ```
 */
var NbCalendarRangeComponent = /** @class */ (function () {
    function NbCalendarRangeComponent() {
        /**
           * Defines if we should render previous and next months
           * in the current month view.
           * */
        this.boundingMonth = true;
        /**
           * Defines starting view for the calendar.
           * */
        this.startView = NbCalendarViewMode.DATE;
        this.dayCellComponent = NbCalendarRangeDayCellComponent;
        this.yearCellComponent = NbCalendarRangeYearCellComponent;
        /**
           * Size of the calendar and entire components.
           * Can be 'medium' which is default or 'large'.
           * */
        this.size = NbCalendarSize.MEDIUM;
        /**
           * Emits range when start selected and emits again when end selected.
           * */
        this.rangeChange = new EventEmitter();
    }
    Object.defineProperty(NbCalendarRangeComponent.prototype, "_cellComponent", {
        set: /**
           * Custom day cell component. Have to implement `NbCalendarCell` interface.
           * */
        function (cellComponent) {
            if (cellComponent) {
                this.dayCellComponent = cellComponent;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NbCalendarRangeComponent.prototype, "_yearCellComponent", {
        set: /**
           * Custom year cell component. Have to implement `NbCalendarCell` interface.
           * */
        function (cellComponent) {
            if (cellComponent) {
                this.yearCellComponent = cellComponent;
            }
        },
        enumerable: true,
        configurable: true
    });
    NbCalendarRangeComponent.prototype.onChange = function (date) {
        this.initDateIfNull();
        this.handleSelected(date);
    };
    NbCalendarRangeComponent.prototype.initDateIfNull = function () {
        if (!this.range) {
            this.range = { start: null, end: null };
        }
    };
    NbCalendarRangeComponent.prototype.handleSelected = function (date) {
        if (this.selectionStarted()) {
            this.selectEnd(date);
        }
        else {
            this.selectStart(date);
        }
    };
    NbCalendarRangeComponent.prototype.selectionStarted = function () {
        var _a = this.range, start = _a.start, end = _a.end;
        return start && !end;
    };
    NbCalendarRangeComponent.prototype.selectStart = function (start) {
        this.selectRange({ start: start });
    };
    NbCalendarRangeComponent.prototype.selectEnd = function (date) {
        var start = this.range.start;
        if (NbDateTimeUtil.compareDates(date, start) > 0) {
            this.selectRange({ start: start, end: date });
        }
        else {
            this.selectRange({ start: date, end: start });
        }
    };
    NbCalendarRangeComponent.prototype.selectRange = function (range) {
        this.range = range;
        this.rangeChange.emit(range);
    };
    NbCalendarRangeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nb-calendar-range',
                    template: "\n    <nb-base-calendar\n      [date]=\"range\"\n      (dateChange)=\"onChange($event)\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [startView]=\"startView\"\n      [boundingMonth]=\"boundingMonth\"\n      [dayCellComponent]=\"dayCellComponent\"\n      [monthCellComponent]=\"monthCellComponent\"\n      [yearCellComponent]=\"yearCellComponent\"\n      [size]=\"size\"\n    ></nb-base-calendar>\n  ",
                },] },
    ];
    /** @nocollapse */
    NbCalendarRangeComponent.propDecorators = {
        "boundingMonth": [{ type: Input },],
        "startView": [{ type: Input },],
        "min": [{ type: Input },],
        "max": [{ type: Input },],
        "filter": [{ type: Input },],
        "_cellComponent": [{ type: Input, args: ['dayCellComponent',] },],
        "monthCellComponent": [{ type: Input },],
        "_yearCellComponent": [{ type: Input, args: ['yearCellComponent',] },],
        "size": [{ type: Input },],
        "range": [{ type: Input },],
        "rangeChange": [{ type: Output },],
    };
    return NbCalendarRangeComponent;
}());
export { NbCalendarRangeComponent };
//# sourceMappingURL=calendar-range.component.js.map